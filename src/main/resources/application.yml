server:
  port: 8082

spring:
  datasource:
    url: jdbc:mysql://10.0.114.30:3308/notidb?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=utf8
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false

  cloud:
    function:
      definition: orderScsConsumer;orderKafkaConsumer # 두 컨슈머를 함수형으로 등록
    stream:
      default:
        content-type: application/json
      bindings:
        # SCS 발행 수신 (헤더에 contentType 포함 → 기본 디코딩)
        orderScsConsumer-in-0:
          destination: order-created-scs
          group: noti-scs-group
          content-type: application/json
          consumer:
            use-native-decoding: false   # ← 명시적으로 SCS 디코딩


        # KafkaTemplate 발행 수신 (헤더 없음 → native 디코딩 필수)
        orderKafkaConsumer-in-0:
          destination: order-created-kafka
          group: noti-kafka-group
          content-type: application/json
          consumer:
            use-native-decoding: true

      # Kafka 바인더 공통
      kafka:
        binder:
          brokers: 10.0.114.30:29092
        # 바인딩별 Kafka 원시 설정 주입 (native-decoding일 때 필요)
        bindings:
          orderKafkaConsumer-in-0:
            consumer:
              startOffset: latest
              configuration:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
                spring.json.trusted.packages: com.dean.study.flux.*
                spring.json.value.default.type: com.dean.study.flux.noti.dto.OrderCreatedEvent
                spring.json.use.type.headers: false
                auto.offset.reset: latest
  kafka:
    consumer:
      auto-offset-reset: latest

logging:
  level:
    com.dean.study.flux.noti: DEBUG
    org.hibernate.SQL: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakerevents,bindings
  endpoint:
    health:
      show-details: always